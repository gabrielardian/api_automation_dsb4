{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-20T07:52:55.089Z",
    "end": "2024-06-20T07:52:57.176Z",
    "duration": 2087,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b350c1ff-0825-4818-8bd9-dbd414eca063",
      "title": "",
      "fullFile": "D:\\BOOTCAMP\\TUGAS SESI 7\\api_automation_dsb4\\test\\api_test.js",
      "file": "\\test\\api_test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f7fadb2-68d2-4cd8-bbda-7a46a9c76c24",
          "title": "RESREQ-API.IN API TEST",
          "fullFile": "D:\\BOOTCAMP\\TUGAS SESI 7\\api_automation_dsb4\\test\\api_test.js",
          "file": "\\test\\api_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "T1 - GET LIST USER",
              "fullTitle": "RESREQ-API.IN API TEST T1 - GET LIST USER",
              "timedOut": false,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const schema = readJsonSchema('get_list_user_schema.json')\n        \n        const response = await supertest(baseURL).get(\"/users?page=2\");\n        // assert.equal(response.status, 200)\n        // should(response.status === 200);\n        expect(response.status).to.equal(200)\n        expect(response.body.page).to.equal(2)\n        expect(response.body).to.be.jsonSchema(schema)\n        console.log(response.status)",
              "err": {},
              "uuid": "3c77adc6-2357-49cd-8369-8e7574da3103",
              "parentUUID": "9f7fadb2-68d2-4cd8-bbda-7a46a9c76c24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T2 - Post Create ",
              "fullTitle": "RESREQ-API.IN API TEST T2 - Post Create ",
              "timedOut": false,
              "duration": 652,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestdata = {\n    \"name\": \"morpheus\",\n    \"job\": \"leader\"\n};\nconst schema = readJsonSchema('post_create.json')\n// const schema = JSON.parse(fs.readFileSync(\"resource/schema/post_create.json\", 'utf8'));\nconst response = await supertest(baseURL)\n    .post(\"/users\")\n    .send(requestdata);\nconsole.log(response.body)\nexpect(response.status).to.equal(201);\nexpect(response.body).to.be.jsonSchema(schema);\ncreatedId =response.body.id\nconsole.log(response.status)",
              "err": {},
              "uuid": "bf588ffe-ee5c-4872-a82c-5ba033d6fed6",
              "parentUUID": "9f7fadb2-68d2-4cd8-bbda-7a46a9c76c24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T3 - DELETE user RESREQ.IN",
              "fullTitle": "RESREQ-API.IN API TEST T3 - DELETE user RESREQ.IN",
              "timedOut": false,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(createdId)\nconst response = await supertest(baseURL).delete(\"users/2\");\nconsole.log(response.body)",
              "err": {},
              "uuid": "8d468eab-1542-47f5-84ff-46667c3d4245",
              "parentUUID": "9f7fadb2-68d2-4cd8-bbda-7a46a9c76c24",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "T4 - Put Update User",
              "fullTitle": "RESREQ-API.IN API TEST T4 - Put Update User",
              "timedOut": false,
              "duration": 628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const Updatedata = {\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n};\nconst schema = readJsonSchema('put_user.json')\n// const schema = JSON.parse(fs.readFileSync(\"resource/schema/put_user.json\", 'utf8'));\nconst response = await supertest(baseURL)\n    .put(\"/users/2\")\n    .send(Updatedata);\nconsole.log(response.body)\nconsole.log(response.status)\nexpect(response.status).to.equal(200);\nexpect(response.body).to.be.jsonSchema(schema);",
              "err": {},
              "uuid": "065b7ad3-add3-4e4c-9734-e0fbff8ff1df",
              "parentUUID": "9f7fadb2-68d2-4cd8-bbda-7a46a9c76c24",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c77adc6-2357-49cd-8369-8e7574da3103",
            "bf588ffe-ee5c-4872-a82c-5ba033d6fed6",
            "8d468eab-1542-47f5-84ff-46667c3d4245",
            "065b7ad3-add3-4e4c-9734-e0fbff8ff1df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}